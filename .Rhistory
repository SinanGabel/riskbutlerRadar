toJSON(r)
t(toJSON(r))
t(r)
toJSON(t(r))
toJSON(r)
r
s <- yuima::simulate(mymod, sampling = samp, xinit = c(200,250))
t <- s@data@original.data
t
t[2,]
r <- c()
m <- 10
for(i in 1:m) {
s <- yuima::simulate(mymod, sampling = samp, xinit = c(200,250))
t <- s@data@original.data
r <- rbind(r,t[2,], deparse.level = 0)
}
r
toJSON(r)
#' An interface to the yuima::simulate function
#'
#' Multivariate models
#'
#' @param sumsim  sum simulations vertically (default TRUE)
#' @param nsim number of simulations (default 1)
#' @param drift  (e.g."mu * x")
#' @param diffusion  (e.g. "sigma * x")
#' @param xinit initial value vector of state variables (default 1)
#' @param Terminal (default 1)
#' @param n number of trading times (default 1)
#' @param parameter named list of parameters (name true.parameter in yuima).
#' @return simulations
#' @export
#'
#'
yuima.simulate <- function(setseed = FALSE, sumsim = TRUE, nsim = 1, drift, diffusion, xinit = 1, Terminal = 1, n = 100, parameter) {
ymod <- yuima::setModel(drift = drift, diffusion = diffusion)
ysam <- yuima::setSampling(Terminal = Terminal, n = n)
yobj <- yuima::setYuima(model = ymod, sampling = ysam)
if (nsim == 1) {
if (setseed == TRUE) {
set.seed(123)
}
s <- yuima::simulate(yobj, xinit = xinit, true.parameter = parameter)
return(s@data@original.data[2,])
} else if (sumsim == TRUE) {
r <- c(0)
m <- nsim
for(i in 1:m) {
if (setseed == TRUE) {
set.seed(123)
}
s <- yuima::simulate(yobj, xinit = xinit, true.parameter = parameter)
t <- s@data@original.data
r <- r + t[2,]
}
return(r)
} else {
r <- c()
m <- nsim
for(i in 1:m) {
if (setseed == TRUE) {
set.seed(123)
}
s <- yuima::simulate(yobj, xinit = xinit, true.parameter = parameter)
t <- s@data@original.data
r <- rbind(r,t[2,], deparse.level = 0)
#r <- cbind(r, t)
}
#avg <- apply(res, 1, mean)
#vol <-  apply(res, 1, sd)
return(r)
}
}
# library(radar)
# note: sumsim, nsim and n
# X <- yuima.simulate(setseed = FALSE, drift = "mu * x", diffusion = "sigma * x", sumsim = TRUE, nsim = 100, xinit = 100, parameter = list(mu = 0.1, sigma = 0.07), Terminal = 1, n = 10)
X <- yuima.simulate(setseed = FALSE, drift = "mu * x", diffusion = "sigma * x", sumsim = TRUE, nsim = 100, xinit = 100, parameter = list(mu = 0.1, sigma = 0.07), Terminal = 1, n = 10)
X
X <- yuima.simulate(setseed = FALSE, drift = "mu * x", diffusion = "sigma * x", sumsim = FALSE, nsim = 100, xinit = 100, parameter = list(mu = 0.1, sigma = 0.07), Terminal = 1, n = 10)
X
toJSON(X)
X
X[1,]
X[,1]
toJSON(X[,1])
library("yuima")
# Model J. of Statistical Software, Vol. 57, Issue 4, 2014, page 20yyyy
#
# dX1,t = -theta * X1,t * dt + dW1,t + X2,t * dW3,t
#
# dX2,t = -(X1,t + gamma * X2,t) * dt + X1,t * dW1,t + gamma * dW2,t
sol <- c("x1", "x2")
b <- c("-theta * x1","-x1 - gamma * x2")
# 2 rows times 3 columns: (1, x1, 0) in the first row
s <- matrix(c("1","x1","0","delta","x2","0"),2,3)
mymod <- setModel(drift=b, diffusion=s, solve.variable=sol)
samp <- setSampling(Terminal = 3, n = 3000)
set.seed(123)
XX <- simulate(mymod, sampling = samp, xinit = c(200,250))
plot(XX)
## --- call many times ---
samp <- setSampling(Terminal = 1, n = 1)
r <- c()
m <- 10
for(i in 1:m) {
s <- yuima::simulate(mymod, sampling = samp, xinit = c(200,250))
t <- s@data@original.data
r <- rbind(r,t[2,], deparse.level = 0)
}
#avg <- apply(res, 1, mean)
#vol <-  apply(res, 1, sd)
r
warnings()
r
toJSON(r)
X <- yuima.simulate(setseed = FALSE, drift = "mu * x", diffusion = "sigma * x", sumsim = FALSE, nsim = 100, xinit = 100, parameter = list(mu = 0.1, sigma = 0.07), Terminal = 1, n = 10)
X
X <- yuima.simulate(setseed = FALSE, drift = "mu * x", diffusion = "sigma * x", sumsim = TRUE, nsim = 100, xinit = 100, parameter = list(mu = 0.1, sigma = 0.07), Terminal = 1, n = 10)
X
toJSON(X)
X <- yuima.simulate(setseed = FALSE, drift = "mu * x", diffusion = "sigma * x", sumsim = FALSE, nsim = 100, xinit = 100, parameter = list(mu = 0.1, sigma = 0.07), Terminal = 1, n = 10)
X
toJSON(X)
X <- yuima.simulate(setseed = FALSE, drift = "mu * x", diffusion = "sigma * x", sumsim = FALSE, nsim = 1, xinit = 100, parameter = list(mu = 0.1, sigma = 0.07), Terminal = 1, n = 10)
X
toJSON(X)
set.seed(123)
X <- yuima.simulate(drift = "mu * x", diffusion = "sigma * x", sumsim = TRUE, nsim = 100, xinit = 100, parameter = list(mu = 0.1, sigma = 0.07), Terminal = 1, n = 10)
X
X <- yuima.simulate(setseed = TRUE, sumsim = TRUE, nsim = 1 ,drift = "mu * x", diffusion = "sigma * x",  xinit = 100, parameter = list(mu = 0.1, sigma = 0.07), Terminal = 1, n = 10)
X
X <- yuima.simulate(setseed = TRUE, sumsim = FALSE, nsim = 1 ,drift = "mu * x", diffusion = "sigma * x",  xinit = 100, parameter = list(mu = 0.1, sigma = 0.07), Terminal = 1, n = 10)
mean(X)
X
X
library(radar)
library(radar)
warnings()
X <- yuima.simulate(setseed = TRUE, sumsim = FALSE, nsim = 1 ,drift = "mu * x", diffusion = "sigma * x",  xinit = 100, parameter = list(mu = 0.1, sigma = 0.07), Terminal = 1, n = 10)
X
X <- yuima.simulate(setseed = TRUE, sumsim = FALSE, nsim = 1 ,drift = "mu * x", diffusion = "sigma * x",  xinit = 100, parameter = list(mu = 0.1, sigma = 0.07), Terminal = 1, n = 1)
X
X <- yuima.simulate(setseed = TRUE, sumsim = FALSE, nsim = 100 ,drift = "mu * x", diffusion = "sigma * x",  xinit = 100, parameter = list(mu = 0.1, sigma = 0.07), Terminal = 1, n = 1)
X
X <- yuima.simulate(setseed = FALSE, sumsim = FALSE, nsim = 1 ,drift = "mu * x", diffusion = "sigma * x",  xinit = 1000, parameter = list(mu = 0.1, sigma = 0.07), Terminal = 1, n = 1)
X
X <- yuima.simulate(setseed = FALSE, sumsim = FALSE, nsim = 12 ,drift = "mu * x", diffusion = "sigma * x",  xinit = 1000, parameter = list(mu = 0.1, sigma = 0.07), Terminal = 1, n = 1)
X
X <- yuima.simulate(setseed = FALSE, sumsim = FALSE, nsim = 12 ,drift = "mu * x", diffusion = "sigma * x",  xinit = 1000, parameter = list(mu = 0.1, sigma = 0.07), Terminal = 1, n = 2)
X
X <- yuima.simulate(setseed = FALSE, sumsim = FALSE, nsim = 12 ,drift = "mu * x", diffusion = "sigma * x",  xinit = 1000, parameter = list(mu = 0.1, sigma = 0.07), Terminal = 1, n = 4)
X
library("yuima")
# Model J. of Statistical Software, Vol. 57, Issue 4, 2014, page 20yyyy
#
# dX1,t = -theta * X1,t * dt + dW1,t + X2,t * dW3,t
#
# dX2,t = -(X1,t + gamma * X2,t) * dt + X1,t * dW1,t + gamma * dW2,t
sol <- c("x1", "x2")
b <- c("-theta * x1","-x1 - gamma * x2")
# 2 rows times 3 columns: (1, x1, 0) in the first row
s <- matrix(c("1","x1","0","delta","x2","0"),2,3)
mymod <- setModel(drift=b, diffusion=s, solve.variable=sol)
samp <- setSampling(Terminal = 1, n = 3)
r <- c()
m <- 10
for(i in 1:m) {
s <- yuima::simulate(mymod, sampling = samp, xinit = c(200,250))
t <- s@data@original.data
r <- rbind(r,t, deparse.level = 0)
}
r
r
toJSoN(r)
toJSON(r)
samp <- setSampling(Terminal = 1, n = 3)
r <- c()
m <- 2
for(i in 1:m) {
s <- yuima::simulate(mymod, sampling = samp, xinit = c(200,250))
t <- s@data@original.data
r <- rbind(r,t, deparse.level = 0)
}
#avg <- apply(res, 1, mean)
#vol <-  apply(res, 1, sd)
r
r <- c()
m <- 1
for(i in 1:m) {
s <- yuima::simulate(mymod, sampling = samp, xinit = c(200,250))
t <- s@data@original.data
r <- rbind(r,t, deparse.level = 0)
}
r
r[2,]
r[2:3+2,]
r[2:5,]
r[2:3,]
r[2:4,]
r[-1,]
r <- c()
m <- 1
for(i in 1:m) {
s <- yuima::simulate(mymod, sampling = samp, xinit = c(200,250))
t <- s@data@original.data
r <- rbind(r,t[-1,], deparse.level = 0)
}
r
r <- c()
m <- 3
for(i in 1:m) {
s <- yuima::simulate(mymod, sampling = samp, xinit = c(200,250))
t <- s@data@original.data
r <- rbind(r,t[-1,], deparse.level = 0)
}
r
library(radar)
library(radar)
X <- yuima.simulate(setseed = FALSE, sumsim = FALSE, nsim = 10, drift = "mu * x", diffusion = "sigma * x", xinit = 100, parameter = list(mu = 0.1, sigma = 0.07), Terminal = 1, n = 3)
X
X <- yuima.simulate(setseed = FALSE, sumsim = FALSE, nsim = 10, drift = "mu * x", diffusion = "sigma * x", xinit = 100, parameter = list(mu = 0.1, sigma = 0.07), Terminal = 1, n = 1)
X
X <- yuima.simulate(setseed = FALSE, sumsim = FALSE, nsim = 10, drift = "mu * x", diffusion = "sigma * x", xinit = 100, Terminal = 1, n = 3, parameter = list(mu = 0.1, sigma = 0.07))
X
X <- yuima.simulate(setseed = FALSE, sumsim = FALSE, nsim = 10, drift = "mu * x", diffusion = "sigma * x", xinit = 100, Terminal = 1, n = 1, parameter = list(mu = 0.1, sigma = 0.07))
X
library(radar)
library(radar)
X <- yuima.simulate(setseed = FALSE, sumsim = FALSE, nsim = 10, drift = "mu * x", diffusion = "sigma * x", xinit = 100, Terminal = 1, n = 1, parameter = list(mu = 0.1, sigma = 0.07))
X
rm(list())
rm(yuima.simulate())
rm(yuima.simulate
rm(yuima.simulate)
rm("yuima.simulate")
X <- yuima.simulate(setseed = FALSE, sumsim = FALSE, nsim = 10, drift = "mu * x", diffusion = "sigma * x", xinit = 100, Terminal = 1, n = 1, parameter = list(mu = 0.1, sigma = 0.07))
X
library(radar)
library(radar)
X <- yuima.simulate(setseed = FALSE, sumsim = FALSE, nsim = 10, drift = "mu * x", diffusion = "sigma * x", xinit = 100, Terminal = 1, n = 1, parameter = list(mu = 0.1, sigma = 0.07))
X
X <- yuima.simulate(setseed = FALSE, sumsim = FALSE, nsim = 10, drift = "mu * x", diffusion = "sigma * x", xinit = 100, Terminal = 1, n = 3, parameter = list(mu = 0.1, sigma = 0.07))
X
toJSON(X)
library(jsonlite)
toJSON(X)
sol <- c("x1", "x2")
b <- c("-theta * x1","-x1 - gamma * x2")
# 2 rows times 3 columns: (1, x1, 0) in the first row
s <- matrix(c("1","x1","0","delta","x2","0"),2,3)
mymod <- setModel(drift=b, diffusion=s, solve.variable=sol)
samp <- setSampling(Terminal = 3, n = 3000)
set.seed(123)
XX <- simulate(mymod, sampling = samp, xinit = c(200,250))
plot(XX)
sol <- c("x1", "x2")
b <- c("-theta * x1","-x1 - gamma * x2")
# 2 rows times 3 columns: (1, x1, 0) in the first row
s <- matrix(c("1","x1","0","delta","x2","0"),2,3)
mymod <- setModel(drift=b, diffusion=s, solve.variable=sol)
samp <- setSampling(Terminal = 3, n = 3000)
set.seed(123)
XX <- simulate(mymod, sampling = samp, xinit = c(200,250))
plot(XX)
library("yuima")
# Model J. of Statistical Software, Vol. 57, Issue 4, 2014, page 20yyyy
#
# dX1,t = -theta * X1,t * dt + dW1,t + X2,t * dW3,t
#
# dX2,t = -(X1,t + gamma * X2,t) * dt + X1,t * dW1,t + gamma * dW2,t
sol <- c("x1", "x2")
b <- c("-theta * x1","-x1 - gamma * x2")
# 2 rows times 3 columns: (1, x1, 0) in the first row
s <- matrix(c("1","x1","0","delta","x2","0"),2,3)
mymod <- setModel(drift=b, diffusion=s, solve.variable=sol)
samp <- setSampling(Terminal = 3, n = 3000)
set.seed(123)
XX <- simulate(mymod, sampling = samp, xinit = c(200,250))
plot(XX)
samp <- setSampling(Terminal = 1, n = 3)
r <- c()
m <- 3
for(i in 1:m) {
s <- yuima::simulate(mymod, sampling = samp, xinit = c(200,250))
t <- s@data@original.data
r <- rbind(r,t[-1,], deparse.level = 0)
}
r
toJSON(r)
X <- yuima.simulate(setseed = FALSE, sumsim = FALSE, nsim = 1, drift = "mu * x", diffusion = "sigma * x", xinit = 100, Terminal = 1, n = 3, parameter = list(mu = 0.1, sigma = 0.07))
X
?setModel
rm(list=ls())
library(radar)
library(radar)
X <- yuima.simulate(setseed = FALSE, sumsim = FALSE, nsim = 10, drift = "mu * x", diffusion = "sigma * x", xinit = 100, hurst = 0.5, solve.variable = "x", Terminal = 1, n = 3, parameter = list(mu = 0.1, sigma = 0.07))
X
X <- yuima.simulate(setseed = FALSE, sumsim = FALSE, nsim = 10, drift = "mu * y", diffusion = "sigma * y", xinit = 100, hurst = 0.5, solve.variable = "y", Terminal = 1, n = 3, parameter = list(mu = 0.1, sigma = 0.07))
X
X <- yuima.simulate(setseed = FALSE, sumsim = FALSE, nsim = 10, drift = "mu * y", diffusion = "sigma * y", xinit = 100, hurst = 0.8, solve.variable = "y", Terminal = 1, n = 3, parameter = list(mu = 0.1, sigma = 0.07))
X
X <- yuima.simulate(setseed = FALSE, sumsim = FALSE, nsim = 20, drift = "mu * y", diffusion = "sigma * y", xinit = 100, hurst = 0.5, solve.variable = "y", Terminal = 1, n = 3, parameter = list(mu = 0.1, sigma = 0.07))
X
X <- yuima.simulate(setseed = FALSE, sumsim = FALSE, nsim = 20, drift = "mu * y", diffusion = "sigma * y", xinit = 100, hurst = 0.5, solve.variable = "y", Terminal = 1, n = 1, parameter = list(mu = 0.1, sigma = 0.07))
X
samp <- setSampling(Terminal=1, n=1000)
str(samp)
samp <- setSampling(Terminal=1, n=1000, grid = list(0,0.25,0.55,75,1))
str(samp)
samp <- setSampling(Terminal=1, n=1000, grid = list(c(0,0.25,0.55,75,1)))
str(samp)
samp <- setSampling(Terminal=1, n=1000, grid = list(c(0,0.25,0.55,0.75,1)))
str(samp)
X <- yuima.simulate(setseed = FALSE, sumsim = FALSE, nsim = 10, drift = "mu * y", diffusion = "sigma * y", xinit = 100, hurst = 0.5, solve.variable = "y", Terminal = 1, n = 1, parameter = list(mu = 0.1, sigma = 0.07), grid = list(c(0,0.25,0.55,0.75,1)))
rm(list=ls())
library("yuima")
# Model J. of Statistical Software, Vol. 57, Issue 4, 2014, page 20yyyy
#
# dX1,t = -theta * X1,t * dt + dW1,t + X2,t * dW3,t
#
# dX2,t = -(X1,t + gamma * X2,t) * dt + X1,t * dW1,t + gamma * dW2,t
sol <- c("x1", "x2")
b <- c("-theta * x1","-x1 - gamma * x2")
# 2 rows times 3 columns: (1, x1, 0) in the first row
s <- matrix(c("1","x1","0","delta","x2","0"),2,3)
mymod <- setModel(drift=b, diffusion=s, solve.variable=sol)
samp <- setSampling(Terminal = 3, n = 3000, grid = NULL)
set.seed(123)
XX <- simulate(mymod, sampling = samp, xinit = c(200,250))
plot(XX)
samp <- setSampling(Terminal = 3, n = 3000, grid = list(c(0, 0.25, 0.55, 0.75, 1)))
set.seed(123)
XX <- simulate(mymod, sampling = samp, xinit = c(200,250))
plot(XX)
samp <- setSampling(Terminal = 3, n = 3000, grid = list(c(0, 0.25, 0.55, 0.75, 1,3)))
set.seed(123)
XX <- simulate(mymod, sampling = samp, xinit = c(200,250))
plot(XX)
samp <- setSampling(Terminal = 3, n = NULL, grid = list(c(0, 0.25, 0.55, 0.75, 1,3)))
set.seed(123)
XX <- simulate(mymod, sampling = samp, xinit = c(200,250))
plot(XX)
sol <- c("x1", "x2")
b <- c("-theta * x1","-x1 - gamma * x2")
# 2 rows times 3 columns: (1, x1, 0) in the first row
s <- matrix(c("1","x1","0","delta","x2","0"),2,3)
mymod <- setModel(drift=b, diffusion=s, solve.variable=sol)
samp <- setSampling(Terminal = 3, n = 500)
subsamp <- setSampling(grid = list(c(0, 0.25, 0.55, 0.75, 1,3)))
set.seed(123)
XX <- simulate(mymod, sampling = samp, xinit = c(200,250))
plot(XX)
XXsub <- subsampling(XX, sampling = subsamp)
plot(XXsub)
s <- matrix(c("1","x1","0","delta","x2","0"),2,3)
mymod <- setModel(drift=b, diffusion=s, solve.variable=sol)
samp <- setSampling(Terminal = 1, n = 500)
subsamp <- setSampling(grid = list(c(0, 0.25, 0.4, 0.55, 0.75, 0.9, 1)))
set.seed(123)
XX <- simulate(mymod, sampling = samp, xinit = c(200,250))
plot(XX)
XXsub <- subsampling(XX, sampling = subsamp)
plot(XXsub)
XXsub
XXsub@data@original.data
XXsub@sampling
XXsub@data
XXsub@data@zoo.data
XXsub@data@zoo.data
rbind(XXsub@data@zoo.data, XXsub@data@zoo.data)
r <- rbind(XXsub@data@zoo.data, XXsub@data@zoo.data)
r
toJSON(r)
XXsub
XXsub@sampling
XXsub@data@original.data
XXsub@data
XXsub@data@zoo.data
get.zoo.data(XXsub)
get.zoo.data()
samp <- setSampling(Terminal = 1, grid = list(c(0, 0.25, 0.4, 0.55, 0.75, 0.9, 1)))
r <- c()
m <- 3
for(i in 1:m) {
s <- yuima::simulate(mymod, sampling = samp, xinit = c(200,250))
t <- s@data@original.data
r <- rbind(r,t[-1,], deparse.level = 0)
}
r
rm(list=ls())
library("yuima")
sol <- c("x1", "x2")
b <- c("-theta * x1","-x1 - gamma * x2")
# 2 rows times 3 columns: (1, x1, 0) in the first row
s <- matrix(c("1","x1","0","delta","x2","0"),2,3)
mymod <- setModel(drift=b, diffusion=s, solve.variable=sol)
samp <- setSampling(Terminal = 1, grid = list(c(0, 0.25, 0.4, 0.55, 0.75, 0.9, 1)))
r <- c()
m <- 3
for(i in 1:m) {
s <- yuima::simulate(mymod, sampling = samp, xinit = c(200,250))
t <- s@data@original.data
r <- rbind(r,t[-1,], deparse.level = 0)
}
r
samp <- setSampling(Terminal = 1, n = 7, grid = list(c(0, 0.25, 0.4, 0.55, 0.75, 0.9, 1)))
r <- c()
m <- 3
for(i in 1:m) {
s <- yuima::simulate(mymod, sampling = samp, xinit = c(200,250))
t <- s@data@original.data
r <- rbind(r,t[-1,], deparse.level = 0)
}
r
samp <- setSampling(Terminal = 1, n = 6, grid = list(c(0, 0.25, 0.4, 0.55, 0.75, 0.9, 1)))
samp <- setSampling(Terminal = 1, grid = list(c(0, 0.25, 0.4, 0.55, 0.75, 0.9, 1)))
rm(list=ls())
library("yuima")
# Model J. of Statistical Software, Vol. 57, Issue 4, 2014, page 20yyyy
#
# dX1,t = -theta * X1,t * dt + dW1,t + X2,t * dW3,t
#
# dX2,t = -(X1,t + gamma * X2,t) * dt + X1,t * dW1,t + gamma * dW2,t
sol <- c("x1", "x2")
b <- c("-theta * x1","-x1 - gamma * x2")
# 2 rows times 3 columns: (1, x1, 0) in the first row
s <- matrix(c("1","x1","0","delta","x2","0"),2,3)
mymod <- setModel(drift=b, diffusion=s, solve.variable=sol)
samp <- setSampling(Terminal = 1, n = 500)
set.seed(123)
XX <- simulate(mymod, sampling = samp, xinit = c(200,250))
plot(XX)
rm(list=ls())
library(radar)
library(radar)
ar <- 100*exp(rnorm(100, mean=0, sd=0.10))
ar
yuima.qmle(data = log(ar), delta = 1/(24*365), drift = "mu * x", diffusion = "sigma * x", hurst = 0.5, solve.variable = "x", method="L-BFGS-B", start = list(mu = 0.10, sigma = 0.1), lower = list(mu = 0, sigma = 0), upper = list(mu = 0.50, sigma = 1))
X <- yuima.simulate(setseed = FALSE, sumsim = FALSE, nsim = 10, drift = "mu * x", diffusion = "sigma * x", xinit = 100, hurst = 0.5, solve.variable = "x", Terminal = 1, n = 3, parameter = list(mu = 0.1, sigma = 0.07))
X
yuima.simulate(setseed = FALSE, sumsim = FALSE, nsim = 10, drift = "mu * x", diffusion = "sigma * x", xinit = 100, hurst = 0.5, solve.variable = "x", Terminal = 1, n = 3, parameter = list(mu = 0.1, sigma = 0.07))
yuima.simulate(setseed = FALSE, sumsim = FALSE, nsim = 10, drift = "mu * x", diffusion = "sigma * x", xinit = 100, hurst = 0.5, solve.variable = "x", Terminal = 1, n = 1, parameter = list(mu = 0.1, sigma = 0.07))
yuima.simulate(setseed = FALSE, sumsim = FALSE, nsim = 10, drift = "mu * x", diffusion = "sigma * x", xinit = 100, hurst = 0.5, solve.variable = "x", Terminal = 1, n = 4, parameter = list(mu = 0.1, sigma = 0.07))
set.seed(123)
ar <- 100*exp(rnorm(100, mean=0, sd=0.10))
X <- yuima.qmle(data = log(ar), delta = 1, summary = FALSE, drift = "mu * x", diffusion = "sigma * x", hurst = 0.5, solve.variable = "x", method="L-BFGS-B", start = list(mu = 0.10, sigma = 0.1), lower = list(mu = 0, sigma = 0), upper = list(mu = 0.50, sigma = 1))
X <- stats4::summary(X)
library(testthat)
library(stats4)
library(yuima)
library(DBI)
library(RSQLite)
library(radar)
set.seed(123)
ar <- 100*exp(rnorm(100, mean=0, sd=0.10))
ar
X <- yuima.qmle(data = log(ar), delta = 1, summary = FALSE, drift = "mu * x", diffusion = "sigma * x", hurst = 0.5, solve.variable = "x", method="L-BFGS-B", start = list(mu = 0.10, sigma = 0.1), lower = list(mu = 0, sigma = 0), upper = list(mu = 0.50, sigma = 1))
X
X <- stats4::summary(X)
stats::summary(X)
stats4::summary(X)
X <- yuima.qmle(data = log(ar), delta = 1, summary = FALSE, drift = "mu * x", diffusion = "sigma * x", hurst = 0.5, solve.variable = "x", method="L-BFGS-B", start = list(mu = 0.10, sigma = 0.1), lower = list(mu = 0, sigma = 0), upper = list(mu = 0.50, sigma = 1))
stats4::summary(X)
set.seed(123)
ar <- 100*exp(rnorm(100, mean=0, sd=0.10))
X <- yuima.qmle(data = log(ar), delta = 1, summary = FALSE, drift = "mu * x", diffusion = "sigma * x", hurst = 0.5, solve.variable = "x", method="L-BFGS-B", start = list(mu = 0.10, sigma = 0.1), lower = list(mu = 0, sigma = 0), upper = list(mu = 0.50, sigma = 1))
X <- stats4::summary(X)
X <- as.data.frame(X@coef)
expect_that( abs(X$Estimate[1] - 0.1041014143) < 1e-5, is_true() )
expect_that( abs(X$Estimate[2] - 0.0002923041) < 1e-5, is_true() )
expect_that( abs(X$Estimate[2] - 0.0002923041) < 1e-15, is_true() )
expect_that( abs(X$Estimate[2] - 0.0002923041) < 1e-5, is_true() )
X <- yuima.simulate(setseed = TRUE, sumsim = FALSE, nsim = 1 , drift = "mu * x", diffusion = "sigma * x", hurst = 0.5, solve.variable = "x",  xinit = 100, parameter = list(mu = 0.1, sigma = 0.07), Terminal = 1, n = 10)
expect_true( abs(stats::sd(X) - 353.9682) < 1e-2)
expect_true( abs(mean(X) - 10541.72) < 1e-2)
expect_true( length(X) == 11)
set.seed(123)
X <- yuima.simulate(drift = "mu * x", diffusion = "sigma * x", hurst = 0.5, solve.variable = "x", sumsim = TRUE, nsim = 1, xinit = 100, parameter = list(mu = 0.1, sigma = 0.07), Terminal = 1, n = 123)
expect_true( abs(stats::sd(X) - 4.305557) < 1e-2)
expect_true( abs(mean(X) - 107.0228) < 1e-2)
expect_true( length(X) == 124)
X <- yuima.simulate(setseed = TRUE, sumsim = FALSE, nsim = 1 , drift = "mu * x", diffusion = "sigma * x", hurst = 0.5, solve.variable = "x",  xinit = 100, parameter = list(mu = 0.1, sigma = 0.07), Terminal = 1, n = 10)
X
X <- yuima.simulate(setseed = TRUE, sumsim = FALSE, nsim = 1 , drift = "mu * x", diffusion = "sigma * x", hurst = 0.5, solve.variable = "x",  xinit = 100, parameter = list(mu = 0.1, sigma = 0.07), Terminal = 1, n = 10)
stats::sd(X)
X <- yuima.simulate(setseed = TRUE, sumsim = FALSE, nsim = 100 , drift = "mu * x", diffusion = "sigma * x", hurst = 0.5, solve.variable = "x",  xinit = 100, parameter = list(mu = 0.1, sigma = 0.07), Terminal = 1, n = 1)
X
X <- yuima.simulate(setseed = TRUE, sumsim = FALSE, nsim = 1 , drift = "mu * x", diffusion = "sigma * x", hurst = 0.5, solve.variable = "x",  xinit = 100, parameter = list(mu = 0.1, sigma = 0.07), Terminal = 1, n = 10)
X
stats::sd(X)
mean(X)
length(X)
X <- yuima.simulate(setseed = TRUE, sumsim = FALSE, nsim = 1 , drift = "mu * x", diffusion = "sigma * x", hurst = 0.5, solve.variable = "x",  xinit = 100, parameter = list(mu = 0.1, sigma = 0.07), Terminal = 1, n = 10)
expect_true( abs(stats::sd(X) - 5.397833) < 1e-2)
expect_true( abs(mean(X) - 108.1798) < 1e-2)
expect_true( length(X) == 10)
X <- yuima.simulate(setseed = TRUE, sumsim = FALSE, nsim = 1 , drift = "mu * x", diffusion = "sigma * x", hurst = 0.5, solve.variable = "x",  xinit = 100, parameter = list(mu = 0.1, sigma = 0.07), Terminal = 1, n = 10)
expect_true( abs(stats::sd(X) - 5.397833) < 1e-2)
expect_true( abs(mean(X) - 108.1798) < 1e-2)
expect_true( length(X) == 11)
X <- yuima.simulate(setseed = TRUE, sumsim = FALSE, nsim = 1 , drift = "mu * x", diffusion = "sigma * x", hurst = 0.5, solve.variable = "x", xinit = 100, parameter = list(mu = 0.1, sigma = 0.07), Terminal = 1, n = 123)
X
stats::sd(X)
mean(X)
length(X)
X <- yuima.simulate(setseed = TRUE, sumsim = FALSE, nsim = 1 , drift = "mu * x", diffusion = "sigma * x", hurst = 0.5, solve.variable = "x", xinit = 100, parameter = list(mu = 0.1, sigma = 0.07), Terminal = 1, n = 123)
expect_true( abs(stats::sd(X) - 4.275771) < 1e-2)
expect_true( abs(mean(X) - 107.0799) < 1e-2)
expect_true( length(X) == 123)
library(radar)
library(radar)
